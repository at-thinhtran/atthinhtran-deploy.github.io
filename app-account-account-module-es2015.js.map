{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/account/account.component.ts","./src/app/account/account/account.component.html","./src/app/account/dashboard/dashboard.component.ts","./src/app/account/dashboard/dashboard.component.html","./src/app/account/profile/profile.component.ts","./src/app/account/profile/profile.component.html","./src/app/account/profile/profile.resolve.ts","./src/app/service/auth/auth.guard.ts","./src/app/service/check/check.guard.ts"],"names":[],"mappings":"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","file":"app-account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { from } from 'rxjs';\nimport { AccountComponent } from './account/account.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CheckGuard } from '../service/check/check.guard';\nimport { ProfileResolver } from './profile/profile.resolve';\nimport { AuthGuard } from '../service/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'account',\n    component: AccountComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n        canDeactivate: [CheckGuard],\n        resolve: [ProfileResolver]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\n\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from \"./account-routing.module\";\nimport { AccountComponent } from './account/account.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    ProfileComponent,\n    DashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h3>Account</h3>\n<ul>\n  <li><a routerLink=\"./dashboard\" routerLinkActive=\"isActive\">Dashboard</a></li>\n  <li><a routerLink=\"./profile\" routerLinkActive=\"isActive\">Profile</a></li>\n</ul>\n<router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent {\n\n  isTyping = false;\n\n  constructor() { }\n\n  checkTyping() {\n    this.isTyping = true;\n  }\n}\n","<div class=\"form-group\">\n  <label>Description: </label>\n  <input class=\"form-control\" type=\"text\" (keyup)=\"checkTyping()\">\n</div>\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfileResolver implements Resolve<any> {\n  constructor() {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any>|Promise<any>|any {\n    return of({data: 'Router Guard'}).pipe(delay(300));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor( private auth: AuthService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.isAuthorized;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ProfileComponent } from '../../account/profile/profile.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckGuard implements CanDeactivate<ProfileComponent> {\n\n  canDeactivate(\n    component: ProfileComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (component.isTyping) {\n      return confirm('Your data will lose if you change page!');\n    }\n    return true;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}